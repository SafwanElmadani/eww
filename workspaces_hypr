#! /bin/bash

MON=`hyprctl monitors | awk '/Monitor/ {print $2; count++ } /active workspace:/ { if ($3 < 11) {print "mon1:" $3} if ($3 > 10) {print "mon2:" $3} } END { print "monitors:" count }' `

#conver variable to an array
arr=($MON)
NUM_MONITORS=${arr[-1]:9}
if [[ $NUM_MONITORS == 1 ]]; then
MON_PORT1=${arr[0]}
MON1_ACTIVE_WS=${arr[1]:5}
fi

if [[ $NUM_MONITORS == 2 ]]; then
MON_PORT1=${arr[0]}
MON1_ACTIVE_WS=${arr[1]:5}
MON_PORT2=${arr[2]}
MON2_ACTIVE_WS=${arr[3]:5}
fi


echo $MON_PORT1
echo $MON_PORT2
echo $MON1_ACTIVE_WS
echo $MON2_ACTIVE_WS
echo $NUM_MONITORS

#echo ${MON} | while IFS=" " read line; do 
#    echo $line 
#    echo "----"
#done

spaces() {
WORKSPACES=`hyprctl workspaces -j | jq 'map({id: .id | tostring, windows: .windows, mon: .monitor})' | jq 'reduce .[] as $item ({}; .[$item.id] = $item)'`

if [[ -n "$MON_PORT1" ]]; then
    MON1_WS=$(seq 1 10 | jq --argjson windows "${WORKSPACES}" --arg active_ws "$MON1_ACTIVE_WS" --arg mon_port "$MON_PORT1" --slurp  'map(tostring) | map($windows[.] // {id: ., windows: 0, mon: $mon_port}) | map(if .id==$active_ws then .active=1 else .active=0 end)')
fi


if [[ -n "$MON_PORT2" ]]; then
    MON2_WS=$(seq 11 20 | jq --argjson windows "${WORKSPACES}" --arg active_ws "$MON2_ACTIVE_WS" --arg mon_port "$MON_PORT2" --slurp  'map(tostring) | map($windows[.] // {id: ., windows: 0, mon: $mon_port}) | map(if .id==$active_ws then .active=1 else .active=0 end)')
fi

#echo $MON1_WS
#echo $MON2_WS
if [[ -n "$MON_PORT2" ]]; then
     echo "{ \"workspaces1\": $MON1_WS, \"workspaces2\": $MON2_WS }"
else
     echo "{ \"workspaces1\": $MON1_WS, \"workspaces2\": [] }"
fi

}

if [[ $1 == 'workspaces' ]]; then 

    spaces
    socat -u UNIX-CONNECT:/tmp/hypr/$HYPRLAND_INSTANCE_SIGNATURE/.socket2.sock - | while read -r line; do
    	spaces
    done

fi

#seq 1 10 | jq --argjson windows "${WORKSPACES}" --slurp -Mc 'map(tostring) | map($windows[.])'
